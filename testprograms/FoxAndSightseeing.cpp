#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;


class FoxAndSightseeing {
public:
	int getMin(vector <int> position) {
	    int max_ind =0;
	    int ctr = 1;
	    int max_val=0;
		for (vector <int>::iterator it = position.begin()+1;it != position.end()-1;it++ ) {
		     int f,l;
		    if (*(it-1)>*it) f = *(it-1)-*it;
		    else  f = *it - *(it-1);
		    
		    if (*(it+1)>*it)  l = *(it+1)-*it;
		    else  l = *it - *(it+1);
		
			if (max_val < l+f) {
				max_val = l+f;
				max_ind = ctr;
				cout<<"max_val "<<max_val<<endl;
			}
			ctr++;
		}
		cout<<"max_ind "<<max_ind<<" max_val "<<max_val<<endl;
		ctr=1;
		int sum=0;
		int last = position.at(0);
		for (vector <int>::iterator it = position.begin()+1;it != position.end();it++ ) {
		    cout<<"iterator "<<*it<<endl;
			if (ctr ==max_ind) {ctr++;continue;}
			else {
				if(*(it)>last)sum+=*it-last;
				else sum+=last-*it;
				cout<<" before last"<<last<<endl;
				last = *it;
				cout<<"last "<<last<<" sum "<<sum<<endl;
				ctr++;
		
			}	
			
			
		
		}
		return sum;
	}
};


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, vector <int> p0, bool hasAnswer, int p1) {
	cout << "Test " << testNum << ": [" << "{";
	for (int i = 0; int(p0.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << p0[i];
	}
	cout << "}";
	cout << "]" << endl;
	FoxAndSightseeing *obj;
	int answer;
	obj = new FoxAndSightseeing();
	clock_t startTime = clock();
	answer = obj->getMin(p0);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p1 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p1;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;
	
	vector <int> p0;
	int p1;
	
	{
	// ----- test 0 -----
	int t0[] = {1,4,-1,3};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	p1 = 4;
	all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
	// ------------------
	}
	
	{
	// ----- test 1 -----
	int t0[] = {-2,4,3};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	p1 = 5;
	all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
	// ------------------
	}
	
	{
	// ----- test 2 -----
	int t0[] = {1,2,3,4,5,6,7,8,9,10};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	p1 = 9;
	all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
	// ------------------
	}
	
	{
	// ----- test 3 -----
	int t0[] = {100,-100,99,-99};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	p1 = 199;
	all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
	// ------------------
	}
	
	{
	// ----- test 4 -----
	int t0[] = {74,84,92,23,5,-70,-47,-59,24,-86,-39,99,85,-42,54,100,47,-3,42,38};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	p1 = 836;
	all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
	// ------------------
	}
	
	{
	// ----- test 5 -----
	int t0[] = {2,-3,5,7,-11,-13,17,-19,23,29,-31,-37,-41,43,-47,-53,-59,61,-67,71};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	p1 = 535;
	all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
	// ------------------
	}
	
	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
